              	; --------------------------------------
              	; zasm: assemble "boot.asm"
              	; date: 2023-02-27 00:27:07
              	; --------------------------------------


              	;
              	;**************************************************************
              	;*
              	;*        I S H K U R   F D C   B O O T S T R A P
              	;*
              	;**************************************************************
              	;
              	
0004:         	nsec	equ	4		; # of BDOS+BIOS sectors
0038:         	mem	equ	56		; CP/M image starts at mem*1024
              					; Should be same as cpm22.asm
              	
              		; NABU bootstrap loads in at 0xC000
C000:         		org	0xC000
              		
              	; Boot start same as NABU bootstrap
              	; Not sure why the nops are here, but I am keeping them
C000: 00      	base:	nop
C001: 00      		nop
C002: 00      		nop
C003: F3      		di
C004: 3100C0  		ld	sp,base
C007: 180D    		jr	tmsini
              	
              	; Panic!
              	; Set the screen to red and loop 
C009: DBA1    	panic:	in	a,(0xA1)
C00B: 3E96    		ld	a,0x96
C00D: D3A1    		out	(0xA1),a
C00F: 3E87    		ld	a,0x87
C011: D3A1    		out	(0xA1),a
C013: C313C0  	panic1:	jp	panic1	
              		
              		; Change TMS color mode to indicate successful boot
C016: DBA1    	tmsini:	in	a,(0xA1)
C018: 3EE1    		ld	a,0xE1
C01A: D3A1    		out	(0xA1),a
C01C: 3E87    		ld	a,0x87
C01E: D3A1    		out	(0xA1),a
              	
              		; Look for the FDC
C020: 0ECF    		ld	c,0xCF
C022: ED78    	findfd:	in	a,(c)
C024: FE10    		cp	0x10
C026: 280A    		jr	z,drsel
C028: 0C      		inc	c
C029: CA09C0  		jp	z,panic
C02C: 3E0F    		ld	a,0x0F
C02E: 81      		add	a,c
C02F: 4F      		ld	c,a
C030: 18F0    		jr	findfd
              	
              		; FDC has been found, select drive
C032: 3E02    	drsel:	ld	a,2
C034: ED79    		out	(c),a
C036: 06FF    		ld	b,0xFF
C038: CD84C0  		call	stall
              		
              		; Get command register
C03B: 79      		ld	a,c
C03C: D60F    		sub	0x0F
C03E: 4F      		ld	c,a
C03F: 328DC0  		ld	(fdaddr),a
              		
              		; Force FDC interrupt
C042: 3ED0    		ld	a,0xD0
C044: ED79    		out	(c),a
              		
              		; Restore to track 0
              		; We should already be there, but just in case :)
C046: 3E09    		ld	a,0x09
C048: ED79    		out	(c),a
C04A: CD87C0  		call	fdbusy
              		
              		; Step in 1 track
              		; This should be the start of the BDOS
C04D: 3E59    		ld	a,0x59
C04F: ED79    		out	(c),a
C051: CD87C0  		call	fdbusy
              		
              		; Time to read in a sector
              		; Set the sector register
C054: 2100E8  		ld	hl,1024*(mem+2)
C057: 3A8EC0  	reads:	ld	a,(cursec)
C05A: 0C      		inc	c
C05B: 0C      		inc	c
C05C: ED79    		out	(c),a
C05E: 51      		ld	d,c
C05F: 14      		inc	d
C060: 0D      		dec	c
C061: 0D      		dec	c
              		
              		; Issue read command
C062: 3E88    		ld	a,0x88
C064: ED79    		out	(c),a
              		
              		; Wait for data to show up
C066: ED78    	dwait:	in	a,(c)
C068: 1F      		rra
C069: 300B    		jr	nc,nexts
C06B: 1F      		rra
C06C: 30F8    		jr	nc,dwait
C06E: 41      		ld	b,c		; Data is here, read it in
C06F: 4A      		ld	c,d
C070: EDA2    		ini
C072: 04      		inc	b
C073: 48      		ld	c,b
C074: 18F0    		jr	dwait
              		
              		; Move on to the next sector
C076: 3A8EC0  	nexts:	ld	a,(cursec)
C079: FE04    		cp	nsec
              		
              		; If all sectors are in, jump to image
              		
C07B: CA09E8  		jp	z,9+1024*(mem+2)
C07E: 3C      		inc	a
C07F: 328EC0  		ld	(cursec),a
C082: 18D3    		jr	reads
              		
              		
              	; Waits a little bit
              	;
              	; uses: b
C084: 10FE    	stall:	djnz	stall
C086: C9      		ret
              		
              	; Waits until FDC is not busy
              	; c = FDC command address
              	;
              	; uses: a
C087: ED78    	fdbusy:	in	a,(c)
C089: 1F      		rra
C08A: 38FB    		jr	c,fdbusy
C08C: C9      		ret
              	
              	; Variables
C08D: 00      	fdaddr:	defb	0	; FDC address
C08E: 01      	cursec:	defb	1	; Current sector


; +++ segments +++

#CODE          = $C000 = 49152,  size = $008F =   143

; +++ global symbols +++

_end    = $C08F = 49295          boot.asm:14 (unused)
_size   = $008F =   143          boot.asm:14 (unused)
base    = $C000 = 49152          boot.asm:18
cursec  = $C08E = 49294          boot.asm:139
drsel   = $C032 = 49202          boot.asm:54
dwait   = $C066 = 49254          boot.asm:98
fdaddr  = $C08D = 49293          boot.asm:138
fdbusy  = $C087 = 49287          boot.asm:132
findfd  = $C022 = 49186          boot.asm:43
mem     = $0038 =    56          boot.asm:10
nexts   = $C076 = 49270          boot.asm:111
nsec    = $0004 =     4          boot.asm:9
panic   = $C009 = 49161          boot.asm:27
panic1  = $C013 = 49171          boot.asm:32
reads   = $C057 = 49239          boot.asm:84
stall   = $C084 = 49284          boot.asm:125
tmsini  = $C016 = 49174          boot.asm:35


total time: 0.0020 sec.
no errors
