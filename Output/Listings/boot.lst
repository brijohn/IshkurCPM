              	; --------------------------------------
              	; zasm: assemble "boot.asm"
              	; date: 2023-02-26 02:03:41
              	; --------------------------------------


              	;
              	;**************************************************************
              	;*
              	;*        I S H K U R   F D C   B O O T S T R A P
              	;*
              	;**************************************************************
              	;
              	
0004:         	nsec	equ	4		; # of BDOS+BIOS sectors
003A:         	mem	equ	58		; CP/M image starts at mem*1024
              					; Should be same as cpm22.asm
              	
              		; NABU bootstrap loads in at 0xC000
C000:         		org	0xC000
              		
              	; Boot start same as NABU bootstrap
              	; Not sure why the nops are here, but I am keeping them
C000: 00      	base:	nop
C001: 00      		nop
C002: 00      		nop
C003: F3      		di
C004: 3100C0  		ld	sp,base
C007: 180D    		jr	tmsini
              	
              	; Panic!
              	; Set the screen to red and loop 
C009: DBA1    	panic:	in	a,(0xA1)
C00B: 3E96    		ld	a,0x96
C00D: D3A1    		out	(0xA1),a
C00F: 3E87    		ld	a,0x87
C011: D3A1    		out	(0xA1),a
C013: C313C0  	panic1:	jp	panic1	
              		
              		; Change TMS color mode to indicate successful boot
C016: DBA1    	tmsini:	in	a,(0xA1)
C018: 3EE1    		ld	a,0xE1
C01A: D3A1    		out	(0xA1),a
C01C: 3E87    		ld	a,0x87
C01E: D3A1    		out	(0xA1),a
              	
              		; Look for the FDC
C020: 0ECF    		ld	c,0xCF
C022: ED78    	findfd:	in	a,(c)
C024: FE10    		cp	0x10
C026: 280A    		jr	z,drsel
C028: 0C      		inc	c
C029: CA09C0  		jp	z,panic
C02C: 3E0F    		ld	a,0x0F
C02E: 81      		add	a,c
C02F: 4F      		ld	c,a
C030: 18F0    		jr	findfd
              	
              		; FDC has been found, select drive
C032: 3E02    	drsel:	ld	a,2
C034: ED79    		out	(c),a
C036: 06FF    		ld	b,0xFF
C038: CD94C0  		call	stall
              		
              		; Get command register
C03B: 79      		ld	a,c
C03C: D60F    		sub	0x0F
C03E: 4F      		ld	c,a
C03F: 329DC0  		ld	(fdaddr),a
              		
              		; Force FDC interrupt
C042: 3ED0    		ld	a,0xD0
C044: ED79    		out	(c),a
C046: 0610    		ld	b,0x10
C048: CD94C0  		call	stall
              		
              		; Restore to track 0
              		; We should already be there, but just in case :)
C04B: 3E09    		ld	a,0x09
C04D: ED79    		out	(c),a
C04F: CD97C0  		call	fdbusy
              		
              		; Step in 1 track
              		; This should be the start of the BDOS
C052: 3E59    		ld	a,0x59
C054: ED79    		out	(c),a
C056: CD97C0  		call	fdbusy
              		
              		; Time to read in a sector
              		; Set the sector register
C059: 2100F0  		ld	hl,1024*(mem+2)
C05C: 3A9EC0  	reads:	ld	a,(cursec)
C05F: 0C      		inc	c
C060: 0C      		inc	c
C061: ED79    		out	(c),a
C063: 51      		ld	d,c
C064: 14      		inc	d
C065: 0D      		dec	c
C066: 0D      		dec	c
              		
              		; Issue read command
C067: 3E88    		ld	a,0x88
C069: ED79    		out	(c),a
C06B: 0610    		ld	b,0x10
C06D: CD94C0  		call	stall
              		
              		; Wait for data to show up
C070: ED78    	dwait:	in	a,(c)
C072: B7      		or	a
C073: 1F      		rra
C074: 3010    		jr	nc,nexts
C076: 1F      		rra
C077: 3805    		jr	c,dread
C079: B7      		or	a
C07A: 30F4    		jr	nc,dwait
C07C: 188B    		jr	panic
C07E: 41      	dread:	ld	b,c		; Data is here, read it in
C07F: 4A      		ld	c,d
C080: EDA2    		ini
C082: 04      		inc	b
C083: 48      		ld	c,b
C084: 18EA    		jr	dwait
              		
              		; Move on to the next sector
C086: 3A9EC0  	nexts:	ld	a,(cursec)
C089: FE04    		cp	nsec
              		
              		; If all sectors are in, jump to image
              		
C08B: CA09F0  		jp	z,9+1024*(mem+2)
C08E: 3C      		inc	a
C08F: 329EC0  		ld	(cursec),a
C092: 18C8    		jr	reads
              		
              		
              	; Waits a little bit
              	;
              	; uses: b
C094: 10FE    	stall:	djnz	stall
C096: C9      		ret
              		
              	; Waits until FDC is not busy
              	; c = FDC command address
              	;
              	; uses: a
C097: ED78    	fdbusy:	in	a,(c)
C099: 1F      		rra
C09A: 38FB    		jr	c,fdbusy
C09C: C9      		ret
              	
              	; Variables
C09D: 00      	fdaddr:	defb	0	; FDC address
C09E: 01      	cursec:	defb	1	; Current sector


; +++ segments +++

#CODE          = $C000 = 49152,  size = $009F =   159

; +++ global symbols +++

_end    = $C09F = 49311          boot.asm:14 (unused)
_size   = $009F =   159          boot.asm:14 (unused)
base    = $C000 = 49152          boot.asm:18
cursec  = $C09E = 49310          boot.asm:147
dread   = $C07E = 49278          boot.asm:111
drsel   = $C032 = 49202          boot.asm:54
dwait   = $C070 = 49264          boot.asm:102
fdaddr  = $C09D = 49309          boot.asm:146
fdbusy  = $C097 = 49303          boot.asm:140
findfd  = $C022 = 49186          boot.asm:43
mem     = $003A =    58          boot.asm:10
nexts   = $C086 = 49286          boot.asm:119
nsec    = $0004 =     4          boot.asm:9
panic   = $C009 = 49161          boot.asm:27
panic1  = $C013 = 49171          boot.asm:32
reads   = $C05C = 49244          boot.asm:86
stall   = $C094 = 49300          boot.asm:133
tmsini  = $C016 = 49174          boot.asm:35


total time: 0.0022 sec.
no errors
